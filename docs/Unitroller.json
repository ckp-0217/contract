{
    "methods": {
        "_acceptAdmin()": {
            "stateMutability": "nonpayable",
            "code": "function _acceptAdmin() external nonpayable returns (uint256)",
            "inputs": {},
            "outputs": {
                "_0": {
                    "type": "uint256"
                }
            },
            "notice": "Accepts transfer of admin rights. msg.sender must be pendingAdmin",
            "details": "Admin function for pending admin to accept role and update admin"
        },
        "_acceptImplementation()": {
            "stateMutability": "nonpayable",
            "code": "function _acceptImplementation() external nonpayable returns (uint256)",
            "inputs": {},
            "outputs": {
                "_0": {
                    "type": "uint256"
                }
            },
            "notice": "Accepts new implementation of comptroller. msg.sender must be pendingImplementation",
            "details": "Admin function for new implementation to accept it's role as implementation"
        },
        "_setPendingAdmin(address)": {
            "stateMutability": "nonpayable",
            "code": "function _setPendingAdmin(address newPendingAdmin) external nonpayable returns (uint256)",
            "inputs": {
                "newPendingAdmin": {
                    "type": "address",
                    "description": "New pending admin."
                }
            },
            "outputs": {
                "_0": {
                    "type": "uint256"
                }
            },
            "notice": "Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.",
            "details": "Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer."
        },
        "_setPendingImplementation(address)": {
            "stateMutability": "nonpayable",
            "code": "function _setPendingImplementation(address newPendingImplementation) external nonpayable returns (uint256)",
            "inputs": {
                "newPendingImplementation": {
                    "type": "address"
                }
            },
            "outputs": {
                "_0": {
                    "type": "uint256"
                }
            },
            "notice": "* Admin Functions **"
        },
        "admin()": {
            "stateMutability": "view",
            "code": "function admin() external view returns (address)",
            "inputs": {},
            "outputs": {
                "_0": {
                    "type": "address"
                }
            }
        },
        "comptrollerImplementation()": {
            "stateMutability": "view",
            "code": "function comptrollerImplementation() external view returns (address)",
            "inputs": {},
            "outputs": {
                "_0": {
                    "type": "address"
                }
            }
        },
        "pendingAdmin()": {
            "stateMutability": "view",
            "code": "function pendingAdmin() external view returns (address)",
            "inputs": {},
            "outputs": {
                "_0": {
                    "type": "address"
                }
            }
        },
        "pendingComptrollerImplementation()": {
            "stateMutability": "view",
            "code": "function pendingComptrollerImplementation() external view returns (address)",
            "inputs": {},
            "outputs": {
                "_0": {
                    "type": "address"
                }
            }
        }
    },
    "events": {
        "Failure": {
            "code": "event Failure(uint256 error, uint256 info, uint256 detail)",
            "inputs": {
                "error": {
                    "type": "uint256",
                    "indexed": false
                },
                "info": {
                    "type": "uint256",
                    "indexed": false
                },
                "detail": {
                    "type": "uint256",
                    "indexed": false
                }
            }
        },
        "NewAdmin": {
            "code": "event NewAdmin(address oldAdmin, address newAdmin)",
            "inputs": {
                "oldAdmin": {
                    "type": "address",
                    "indexed": false
                },
                "newAdmin": {
                    "type": "address",
                    "indexed": false
                }
            }
        },
        "NewImplementation": {
            "code": "event NewImplementation(address oldImplementation, address newImplementation)",
            "inputs": {
                "oldImplementation": {
                    "type": "address",
                    "indexed": false
                },
                "newImplementation": {
                    "type": "address",
                    "indexed": false
                }
            }
        },
        "NewPendingAdmin": {
            "code": "event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin)",
            "inputs": {
                "oldPendingAdmin": {
                    "type": "address",
                    "indexed": false
                },
                "newPendingAdmin": {
                    "type": "address",
                    "indexed": false
                }
            }
        },
        "NewPendingImplementation": {
            "code": "event NewPendingImplementation(address oldPendingImplementation, address newPendingImplementation)",
            "inputs": {
                "oldPendingImplementation": {
                    "type": "address",
                    "indexed": false
                },
                "newPendingImplementation": {
                    "type": "address",
                    "indexed": false
                }
            }
        }
    },
    "errors": {},
    "path": "",
    "title": "ComptrollerCore",
    "details": "Storage for the comptroller is at this address, while execution is delegated to the `comptrollerImplementation`. CTokens should reference this contract as their comptroller.",
    "name": "Unitroller"
}