{
    "methods": {
        "allowance(address,address)": {
            "stateMutability": "view",
            "code": "function allowance(address owner, address spender) external view returns (uint256 remaining)",
            "inputs": {
                "owner": {
                    "type": "address",
                    "description": "The address of the account which owns the tokens to be spent"
                },
                "spender": {
                    "type": "address",
                    "description": "The address of the account which may transfer tokens"
                }
            },
            "outputs": {
                "remaining": {
                    "type": "uint256"
                }
            },
            "notice": "Get the current allowance from `owner` for `spender`"
        },
        "approve(address,uint256)": {
            "stateMutability": "nonpayable",
            "code": "function approve(address spender, uint256 amount) external nonpayable returns (bool success)",
            "inputs": {
                "spender": {
                    "type": "address",
                    "description": "The address of the account which may transfer tokens"
                },
                "amount": {
                    "type": "uint256",
                    "description": "The number of tokens that are approved"
                }
            },
            "outputs": {
                "success": {
                    "type": "bool"
                }
            },
            "notice": "Approve `spender` to transfer up to `amount` from `src`",
            "details": "This will overwrite the approval amount for `spender` and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)"
        },
        "balanceOf(address)": {
            "stateMutability": "view",
            "code": "function balanceOf(address owner) external view returns (uint256 balance)",
            "inputs": {
                "owner": {
                    "type": "address",
                    "description": "The address from which the balance will be retrieved"
                }
            },
            "outputs": {
                "balance": {
                    "type": "uint256"
                }
            },
            "notice": "Gets the balance of the specified address"
        },
        "totalSupply()": {
            "stateMutability": "view",
            "code": "function totalSupply() external view returns (uint256)",
            "inputs": {},
            "outputs": {
                "_0": {
                    "type": "uint256"
                }
            },
            "notice": "Get the total number of tokens in circulation"
        },
        "transfer(address,uint256)": {
            "stateMutability": "nonpayable",
            "code": "function transfer(address dst, uint256 amount) external nonpayable",
            "inputs": {
                "dst": {
                    "type": "address",
                    "description": "The address of the destination account"
                },
                "amount": {
                    "type": "uint256",
                    "description": "The number of tokens to transfer"
                }
            },
            "outputs": {},
            "notice": "Transfer `amount` tokens from `msg.sender` to `dst`"
        },
        "transferFrom(address,address,uint256)": {
            "stateMutability": "nonpayable",
            "code": "function transferFrom(address src, address dst, uint256 amount) external nonpayable",
            "inputs": {
                "src": {
                    "type": "address",
                    "description": "The address of the source account"
                },
                "dst": {
                    "type": "address",
                    "description": "The address of the destination account"
                },
                "amount": {
                    "type": "uint256",
                    "description": "The number of tokens to transfer"
                }
            },
            "outputs": {},
            "notice": "Transfer `amount` tokens from `src` to `dst`"
        }
    },
    "events": {
        "Approval": {
            "code": "event Approval(address indexed owner, address indexed spender, uint256 amount)",
            "inputs": {
                "owner": {
                    "type": "address",
                    "indexed": true
                },
                "spender": {
                    "type": "address",
                    "indexed": true
                },
                "amount": {
                    "type": "uint256",
                    "indexed": false
                }
            }
        },
        "Transfer": {
            "code": "event Transfer(address indexed from, address indexed to, uint256 amount)",
            "inputs": {
                "from": {
                    "type": "address",
                    "indexed": true
                },
                "to": {
                    "type": "address",
                    "indexed": true
                },
                "amount": {
                    "type": "uint256",
                    "indexed": false
                }
            }
        }
    },
    "errors": {},
    "path": "",
    "title": "EIP20NonStandardInterface",
    "details": "Version of ERC20 with no return values for `transfer` and `transferFrom` See https://medium.com/coinmonks/missing-return-value-bug-at-least-130-tokens-affected-d67bf08521ca",
    "name": "EIP20NonStandardInterface"
}