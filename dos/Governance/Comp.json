{
    "methods": {
        "DELEGATION_TYPEHASH()": {
            "stateMutability": "view",
            "code": "function DELEGATION_TYPEHASH() external view returns (bytes32)",
            "inputs": {},
            "outputs": {
                "_0": {
                    "type": "bytes32"
                }
            }
        },
        "DOMAIN_TYPEHASH()": {
            "stateMutability": "view",
            "code": "function DOMAIN_TYPEHASH() external view returns (bytes32)",
            "inputs": {},
            "outputs": {
                "_0": {
                    "type": "bytes32"
                }
            }
        },
        "allowance(address,address)": {
            "stateMutability": "view",
            "code": "function allowance(address account, address spender) external view returns (uint256)",
            "inputs": {
                "account": {
                    "type": "address",
                    "description": "The address of the account holding the funds"
                },
                "spender": {
                    "type": "address",
                    "description": "The address of the account spending the funds"
                }
            },
            "outputs": {
                "_0": {
                    "type": "uint256"
                }
            },
            "notice": "Get the number of tokens `spender` is approved to spend on behalf of `account`"
        },
        "approve(address,uint256)": {
            "stateMutability": "nonpayable",
            "code": "function approve(address spender, uint256 rawAmount) external nonpayable returns (bool)",
            "inputs": {
                "spender": {
                    "type": "address",
                    "description": "The address of the account which may transfer tokens"
                },
                "rawAmount": {
                    "type": "uint256",
                    "description": "The number of tokens that are approved (2^256-1 means infinite)"
                }
            },
            "outputs": {
                "_0": {
                    "type": "bool"
                }
            },
            "notice": "Approve `spender` to transfer up to `amount` from `src`",
            "details": "This will overwrite the approval amount for `spender` and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)"
        },
        "balanceOf(address)": {
            "stateMutability": "view",
            "code": "function balanceOf(address account) external view returns (uint256)",
            "inputs": {
                "account": {
                    "type": "address",
                    "description": "The address of the account to get the balance of"
                }
            },
            "outputs": {
                "_0": {
                    "type": "uint256"
                }
            },
            "notice": "Get the number of tokens held by the `account`"
        },
        "checkpoints(address,uint32)": {
            "stateMutability": "view",
            "code": "function checkpoints(address, uint32) external view returns (uint32 fromBlock, uint96 votes)",
            "inputs": {
                "_0": {
                    "type": "address"
                },
                "_1": {
                    "type": "uint32"
                }
            },
            "outputs": {
                "fromBlock": {
                    "type": "uint32"
                },
                "votes": {
                    "type": "uint96"
                }
            }
        },
        "decimals()": {
            "stateMutability": "view",
            "code": "function decimals() external view returns (uint8)",
            "inputs": {},
            "outputs": {
                "_0": {
                    "type": "uint8"
                }
            }
        },
        "delegate(address)": {
            "stateMutability": "nonpayable",
            "code": "function delegate(address delegatee) external nonpayable",
            "inputs": {
                "delegatee": {
                    "type": "address",
                    "description": "The address to delegate votes to"
                }
            },
            "outputs": {},
            "notice": "Delegate votes from `msg.sender` to `delegatee`"
        },
        "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "stateMutability": "nonpayable",
            "code": "function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) external nonpayable",
            "inputs": {
                "delegatee": {
                    "type": "address",
                    "description": "The address to delegate votes to"
                },
                "nonce": {
                    "type": "uint256",
                    "description": "The contract state required to match the signature"
                },
                "expiry": {
                    "type": "uint256",
                    "description": "The time at which to expire the signature"
                },
                "v": {
                    "type": "uint8",
                    "description": "The recovery byte of the signature"
                },
                "r": {
                    "type": "bytes32",
                    "description": "Half of the ECDSA signature pair"
                },
                "s": {
                    "type": "bytes32",
                    "description": "Half of the ECDSA signature pair"
                }
            },
            "outputs": {},
            "notice": "Delegates votes from signatory to `delegatee`"
        },
        "delegates(address)": {
            "stateMutability": "view",
            "code": "function delegates(address) external view returns (address)",
            "inputs": {
                "_0": {
                    "type": "address"
                }
            },
            "outputs": {
                "_0": {
                    "type": "address"
                }
            }
        },
        "getCurrentVotes(address)": {
            "stateMutability": "view",
            "code": "function getCurrentVotes(address account) external view returns (uint96)",
            "inputs": {
                "account": {
                    "type": "address",
                    "description": "The address to get votes balance"
                }
            },
            "outputs": {
                "_0": {
                    "type": "uint96"
                }
            },
            "notice": "Gets the current votes balance for `account`"
        },
        "getPriorVotes(address,uint256)": {
            "stateMutability": "view",
            "code": "function getPriorVotes(address account, uint256 blockNumber) external view returns (uint96)",
            "inputs": {
                "account": {
                    "type": "address",
                    "description": "The address of the account to check"
                },
                "blockNumber": {
                    "type": "uint256",
                    "description": "The block number to get the vote balance at"
                }
            },
            "outputs": {
                "_0": {
                    "type": "uint96"
                }
            },
            "notice": "Determine the prior number of votes for an account as of a block number",
            "details": "Block number must be a finalized block or else this function will revert to prevent misinformation."
        },
        "name()": {
            "stateMutability": "view",
            "code": "function name() external view returns (string)",
            "inputs": {},
            "outputs": {
                "_0": {
                    "type": "string"
                }
            }
        },
        "nonces(address)": {
            "stateMutability": "view",
            "code": "function nonces(address) external view returns (uint256)",
            "inputs": {
                "_0": {
                    "type": "address"
                }
            },
            "outputs": {
                "_0": {
                    "type": "uint256"
                }
            }
        },
        "numCheckpoints(address)": {
            "stateMutability": "view",
            "code": "function numCheckpoints(address) external view returns (uint32)",
            "inputs": {
                "_0": {
                    "type": "address"
                }
            },
            "outputs": {
                "_0": {
                    "type": "uint32"
                }
            }
        },
        "symbol()": {
            "stateMutability": "view",
            "code": "function symbol() external view returns (string)",
            "inputs": {},
            "outputs": {
                "_0": {
                    "type": "string"
                }
            }
        },
        "totalSupply()": {
            "stateMutability": "view",
            "code": "function totalSupply() external view returns (uint256)",
            "inputs": {},
            "outputs": {
                "_0": {
                    "type": "uint256"
                }
            }
        },
        "transfer(address,uint256)": {
            "stateMutability": "nonpayable",
            "code": "function transfer(address dst, uint256 rawAmount) external nonpayable returns (bool)",
            "inputs": {
                "dst": {
                    "type": "address",
                    "description": "The address of the destination account"
                },
                "rawAmount": {
                    "type": "uint256",
                    "description": "The number of tokens to transfer"
                }
            },
            "outputs": {
                "_0": {
                    "type": "bool"
                }
            },
            "notice": "Transfer `amount` tokens from `msg.sender` to `dst`"
        },
        "transferFrom(address,address,uint256)": {
            "stateMutability": "nonpayable",
            "code": "function transferFrom(address src, address dst, uint256 rawAmount) external nonpayable returns (bool)",
            "inputs": {
                "src": {
                    "type": "address",
                    "description": "The address of the source account"
                },
                "dst": {
                    "type": "address",
                    "description": "The address of the destination account"
                },
                "rawAmount": {
                    "type": "uint256",
                    "description": "The number of tokens to transfer"
                }
            },
            "outputs": {
                "_0": {
                    "type": "bool"
                }
            },
            "notice": "Transfer `amount` tokens from `src` to `dst`"
        }
    },
    "events": {
        "Approval": {
            "code": "event Approval(address indexed owner, address indexed spender, uint256 amount)",
            "inputs": {
                "owner": {
                    "type": "address",
                    "indexed": true
                },
                "spender": {
                    "type": "address",
                    "indexed": true
                },
                "amount": {
                    "type": "uint256",
                    "indexed": false
                }
            }
        },
        "DelegateChanged": {
            "code": "event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate)",
            "inputs": {
                "delegator": {
                    "type": "address",
                    "indexed": true
                },
                "fromDelegate": {
                    "type": "address",
                    "indexed": true
                },
                "toDelegate": {
                    "type": "address",
                    "indexed": true
                }
            }
        },
        "DelegateVotesChanged": {
            "code": "event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance)",
            "inputs": {
                "delegate": {
                    "type": "address",
                    "indexed": true
                },
                "previousBalance": {
                    "type": "uint256",
                    "indexed": false
                },
                "newBalance": {
                    "type": "uint256",
                    "indexed": false
                }
            }
        },
        "Transfer": {
            "code": "event Transfer(address indexed from, address indexed to, uint256 amount)",
            "inputs": {
                "from": {
                    "type": "address",
                    "indexed": true
                },
                "to": {
                    "type": "address",
                    "indexed": true
                },
                "amount": {
                    "type": "uint256",
                    "indexed": false
                }
            }
        }
    },
    "errors": {},
    "path": "/Governance",
    "name": "Comp"
}